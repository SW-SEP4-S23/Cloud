name: CI

on:
  workflow_dispatch:
  pull_request:
    branches: [dev]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup enviroment variables
        run: |
          echo "DATABASE_URL=postgres://postgres:@localhost:5432/db?schema=public" > .env

      - name: Install dependencies
        run: npm ci

      # - name: Lint code
      #   run: npm run lint

      # - name: Format code
      #   run: npm run format

      - name: Setup Prisma
        run: npx prisma db push

      - name: Build
        run: npm run build --if-present

      - name: Unit tests
        run: npm run test

      - name: E2E tests
        run: npm run test:e2e

      # - name: Start containers
      #   run: docker-compose -f "docker-compose.ci.yml" up -d --build

      # - name: Lint code
      #   run: docker-compose -f "docker-compose.ci.yml" run app npm run lint

      # - name: Format code
      #   run: docker-compose -f "docker-compose.ci.yml" run app npm run format

      # - name: Setup Prisma
      #   run: docker-compose -f "docker-compose.ci.yml" run app npm run migrate:dev

      # - name: Seed Prisma
      #   run: docker-compose -f "docker-compose.ci.yml" run app npm run prisma:seed

      # - name: Run unit tests
      #   run: docker-compose -f "docker-compose.ci.yml" run app npm run test

      # - name: Run E2E tests
      #   run: docker-compose -f "docker-compose.ci.yml" run app npm run test:e2e

      # - name: Stop containers
      #   run: docker-compose -f "docker-compose.ci.yml" down
